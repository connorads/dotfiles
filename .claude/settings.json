{
  "model": "opusplan",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); printf '\\033[32m%s@%s\\033[0m \\033[34m%s\\033[0m [%s]' \"$(whoami)\" \"$(hostname -s)\" \"$(echo \"$input\" | jq -r '.workspace.current_dir')\" \"$(echo \"$input\" | jq -r '.model.display_name')\""
  },
  "permissions": {
    "allow": [
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.brew.sh)",
      "WebFetch(domain:formulae.brew.sh)",
      "WebFetch(domain:huggingface.co)",
      
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_hover",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_close",
      
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__cloudflare-docs__search_cloudflare_documentation",
      
      "mcp__ide__getDiagnostics",
      
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git log:*)",

      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(which:*)",
      "Bash(shasum:*)",
      "Bash(jq:*)",
      "Bash(diff:*)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run check:*)",
      "Bash(npm run format:*)",
      "Bash(npm run preview:*)",
      "Bash(npm run fix:*)",
      "Bash(npm test:*)",
      
      "Bash(pnpm run dev:*)",
      "Bash(pnpm run build:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run test:*)",
      "Bash(pnpm run typecheck:*)",
      "Bash(pnpm run check:*)",
      "Bash(pnpm run format:*)",
      "Bash(pnpm run preview:*)",
      "Bash(pnpm run fix:*)",
      
      "Bash(yarn run dev:*)",
      "Bash(yarn run build:*)",
      "Bash(yarn run lint:*)",
      "Bash(yarn run test:*)",
      "Bash(yarn run typecheck:*)",
      "Bash(yarn run check:*)",
      "Bash(yarn run format:*)",
      "Bash(yarn run preview:*)",
      "Bash(yarn run fix:*)",
      
      "Bash(pytest:*)",
      "Bash(ruff check:*)",
      "Bash(ruff format:*)",
      "Bash(uv sync:*)",
      
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh repo list:*)",
      
      "Bash(brew audit:*)",
      
      "Bash(aws sts get-caller-identity:*)",
      "Bash(aws appconfig list-applications:*)",
      "Bash(aws appconfig list-environments:*)",
      "Bash(aws appconfig list-configuration-profiles:*)",
      "Bash(aws appconfig list-deployments:*)",
      "Bash(aws appconfig get-configuration:*)",
      "Bash(aws appconfig get-hosted-configuration-version:*)",
      
      "Bash(granted ls)",
      "Bash(assume:*)",
      
      "Bash(mise use:*)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(eval:*)"
    ]
  }
}